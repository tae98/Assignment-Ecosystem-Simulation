#BlueJ class context
comment0.target=Organism
comment0.text=\n\ A\ class\ representing\ shared\ characteristics\ of\ organisms.\n\ \n\ @author\ David\ J.\ Barnes\ and\ Michael\ K\u00C3\u00B6lling\n\ @version\ 2016.02.29\ (2)\n
comment1.params=field\ position
comment1.target=Organism(Field,\ Position)
comment1.text=\n\ Create\ a\ new\ organism\ at\ position\ in\ field.\n\ \n\ @param\ field\ The\ field\ currently\ occupied.\n\ @param\ position\ The\ position\ within\ the\ field.\n
comment10.params=newPosition
comment10.target=void\ setPosition(Position)
comment10.text=\n\ Place\ the\ organism\ at\ the\ new\ position\ in\ the\ given\ field.\n\ @param\ newPosition\ The\ organism's\ new\ position.\n
comment11.params=
comment11.target=Field\ getField()
comment11.text=\n\ Return\ the\ organism's\ field.\n\ @return\ The\ organism's\ field.\n
comment12.params=
comment12.target=int\ getID()
comment12.text=\n\ Each\ organism\ is\ given\ a\ unique\ id.\n
comment13.params=obj
comment13.target=boolean\ equals(java.lang.Object)
comment13.text=\n\ Arraylist\ remove\ works\ by\ comparing\ objects,\ so\ we\ want\ to\ compare\ the\ ID\ of\n\ the\ organism\ to\ check\ whether\ if\ there\ is\ a\ match.\n
comment2.params=newOrganisms
comment2.target=void\ act(java.util.List)
comment2.text=\n\ Make\ this\ organism\ act\ -\ that\ is\:\ make\ it\ do\n\ whatever\ it\ wants/needs\ to\ do.\n\ @param\ newOrganisms\ A\ list\ to\ receive\ newly\ born\ organisms.\n
comment3.params=newOrganism\ needPartner\ productionProb\ maxProduction
comment3.target=void\ reproduce(java.util.List,\ boolean,\ double,\ int)
comment3.text=\n\ Make\ an\ organism\ reproduce,\ they\ have\ probability\ of\ reproducing,\ maximum\ reproduction\n\ size,\ a\ list\ to\ store\ new\ organisms\ and\ whether\ if\ they\ require\ a\ partner\ to\ reproduce.\n
comment4.params=needPartner\ productionProb
comment4.target=Pair\ canReproduce(boolean,\ double)
comment4.text=\n\ Checks\ if\ an\ organism\ can\ reproduce.\ If\ it\ requires\ a\ partner\ it\ will\ check\ nearby\ objects\n\ for\ opposite\ sex\ of\ the\ same\ species,\ if\ it\ doesnt\ then\ it\ will\ just\ check\ the\ probability.\n\ It\ returns\ a\ Pair\ class\ which\ stores\ a\ boolean\ -\ whether\ if\ they\ can\ reproduce\ and\ an\ Organism\ -\ the\ species\ that\ \n\ is\ reproducing.\n
comment5.params=
comment5.target=boolean\ getDisease()
comment5.text=\n\ Returns\ whether\ if\ an\ organism\ is\ carrying\ a\ disease\ or\ not\n
comment6.params=disease
comment6.target=void\ setDisease(boolean)
comment6.text=\nGive\ organism\ disease\n
comment7.params=
comment7.target=boolean\ isAlive()
comment7.text=\n\ Check\ whether\ the\ organism\ is\ alive\ or\ not.\n\ @return\ true\ if\ the\ organism\ is\ still\ alive.\n
comment8.params=
comment8.target=void\ setDead()
comment8.text=\n\ Indicate\ that\ the\ organism\ is\ no\ longer\ alive.\n\ It\ is\ removed\ from\ the\ field.\n
comment9.params=
comment9.target=Position\ getPosition()
comment9.text=\n\ Return\ the\ organism's\ position.\n\ @return\ The\ organism's\ position.\n
numComments=14
